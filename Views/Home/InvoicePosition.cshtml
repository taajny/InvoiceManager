@model InvoiceManager.Models.ViewModels.EditInvoicePositionViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h1>@Model.Heading</h1>

@using (Html.BeginForm("InvoicePosition", "Home"))
{
    @Html.AntiForgeryToken()

    if (Model.InvoicePosition.Id == 0)
    {
        <p class="alert alert-info mt-4 mb-4">
            Pola takie jak Lp, produkt oraz ilość są <strong>wymagane</strong>
        </p>

        @Html.HiddenFor(x => x.InvoicePosition.Id)
        @Html.HiddenFor(x => x.InvoicePosition.InvoiceId)

        <div class="form-group mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Lp, new { @class = "mb-3" })
            @Html.TextBoxFor(x => x.InvoicePosition.Lp, new { @class = "form-control mb-3", autofocus = "autofocus" })
            @Html.ValidationMessageFor(x => x.InvoicePosition.Lp)
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.InvoicePosition.ProductId, new { @class = "mb-3" })
            @Html.DropDownListFor(x => x.InvoicePosition.ProductId,
            new SelectList(Model.Products, "Id", "Name"),
            "-- Wybierz produkt --",
            new { @class = "form-control mb-3" })
            @Html.ValidationMessageFor(x => x.InvoicePosition.ProductId)
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(x => x.InvoicePosition.Quantity, new { @class = "mb-3" })
            @Html.TextBoxFor(x => x.InvoicePosition.Quantity, new { @class = "form-control mb-3" })
            @Html.ValidationMessageFor(x => x.InvoicePosition.Quantity)
        </div>

        if (Model.InvoicePosition.Id != 0)
        {
            <div class="form-group">
                @Html.LabelFor(x => x.InvoicePosition.Value, new { @class = "mb-3" })
                @Html.TextBoxFor(x => x.InvoicePosition.Value, new { @class = "form-control mb-3", @readonly = "readonly" })
            </div>
        }

        <button type="submit" class="btn btn-primary btn-lg mb-5">
            Zapisz
        </button>
    }

}


@section Scripts
{
    <script type="text/javascript">
            
        $(document).ready(function () {

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }

 
        });
    </script>
}